name: 🚀 Android Build & Release

on:
  push:
    branches: [ main, production ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  # Build configuration
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: '34'
  ANDROID_BUILD_TOOLS: '34.0.0'
  
jobs:
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API_LEVEL }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
        
    - name: 📂 Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: 🧪 Run Tests
      run: ./gradlew testDevDebugUnitTest --stacktrace
      
    - name: 📊 Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: 🧪 Unit Test Results
        path: '**/TEST-*.xml'
        reporter: java-junit

  build-debug:
    name: 🔨 Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📂 Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: 🔨 Build Debug APK
      run: ./gradlew assembleDevDebug --stacktrace
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: 📤 Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: greed-gross-debug.apk
        path: app/build/outputs/apk/dev/debug/app-dev-debug.apk
        retention-days: 30

  build-release:
    name: 🚀 Build Release APK
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📂 Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: 🔐 Create Keystore
      run: |
        echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > release-key.keystore
        
    - name: 🚀 Build Release APK
      run: ./gradlew assembleProdRelease --stacktrace
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        RELEASE_KEYSTORE_PATH: release-key.keystore
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
        API_BASE_URL_PROD: ${{ secrets.API_BASE_URL_PROD }}
        
    - name: 📤 Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: greed-gross-release.apk
        path: app/build/outputs/apk/prod/release/app-prod-release.apk
        retention-days: 90
        
    - name: 🏷️ Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: app/build/outputs/apk/prod/release/app-prod-release.apk
        name: Greed & Gross ${{ github.ref_name }}
        body: |
          🌿 **Cannabis Breeding App Release**
          
          ### ✨ Features:
          - 🧬 AI-powered strain breeding with GPT-4
          - 💬 Global chat for breeders community
          - 📱 Material Design cannabis theme
          - 🔬 Genetic analysis and crossing simulation
          
          ### 📱 Installation:
          Download the APK and install on Android 7.0+ (API 24+)
          
          ### 🔗 Links:
          - [Firebase Console](https://console.firebase.google.com/project/greed-gross)
          - [OpenAI API](https://platform.openai.com/api-keys)
          
          Built with ❤️ by Marcone1983
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: build-debug
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🛡️ CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: java
        
    - name: 🔍 Autobuild
      uses: github/codeql-action/autobuild@v3
      
    - name: 📊 CodeQL Analysis
      uses: github/codeql-action/analyze@v3