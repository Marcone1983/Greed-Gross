plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
}

android {
    namespace 'com.greedandgross.app'
    compileSdk 34

    defaultConfig {
        applicationId "com.greedandgross.app"
        minSdk 24
        targetSdk 34
        compileSdk 34
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            def keystorePath = System.getenv("RELEASE_KEYSTORE_PATH") ?: project.findProperty("RELEASE_KEYSTORE_PATH") ?: 'release-key.keystore'
            def keystorePwd = System.getenv("RELEASE_KEYSTORE_PASSWORD") ?: project.findProperty("RELEASE_KEYSTORE_PASSWORD") ?: 'greedgross2024'
            def keyAliasName = System.getenv("RELEASE_KEY_ALIAS") ?: project.findProperty("RELEASE_KEY_ALIAS") ?: 'greed-gross-key'

            storeFile file(keystorePath)
            storePassword keystorePwd
            keyAlias keyAliasName
            keyPassword keystorePwd
        }
    }
    
    flavorDimensions += ["env"]

    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "String", "API_BASE_URL", "\"https://dev-api.greedandgross.com\""
        }
        prod {
            dimension "env"
            buildConfigField "String", "API_BASE_URL", "\"${System.getenv('API_BASE_URL_PROD') ?: 'https://api.greedandgross.com'}\""
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "String", "OPENAI_API_KEY", "\"${project.findProperty('openai.api.key') ?: 'API_KEY_NOT_SET'}\""
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "OPENAI_API_KEY", "\"${project.findProperty('openai.api.key') ?: 'API_KEY_NOT_SET'}\""
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    
    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Image Loading
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Animation
    implementation 'com.airbnb.android:lottie:6.3.0'
    
    // Google Play Billing
    implementation 'com.android.billingclient:billing:6.1.0'
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.6.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-analytics'
    
    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'
    
    // DI (example)
    kapt 'com.google.dagger:dagger-compiler:2.51'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}